@model ANTS.Models.User

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.userid)

    <div class="form-group">
        @Html.LabelFor(model => model.name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <input type="hidden" name="status" value="@Model.status" />

    @*<div class="form-group">
            @Html.LabelFor(model => model.usertype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.usertype, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.usertype, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <label class="control-label col-md-2">User Type</label>
        <div class="col-md-10">
            <select name="usertype" class="form-control">
                @if (Model.usertype == "Admin")
                {
                    <option disabled>--SELECT--</option>
                    <option value="Customer">Customer</option>
                    <option value="ServiceProvider">Service Provider</option>
                    <option value="Manager">Manager</option>
                    <option selected value="Admin">Admin</option>
                }
                else if (Model.usertype == "Manager")
                {
                    <option disabled>--SELECT--</option>
                    <option value="Customer">Customer</option>
                    <option value="ServiceProvider">Service Provider</option>
                    <option selected value="Manager">Manager</option>
                    <option value="Admin">Admin</option>
                }
                else if (Model.usertype == "Customer")
                {
                    <option disabled>--SELECT--</option>
                    <option value="Customer">Customer</option>
                    <option selected value="ServiceProvider">Service Provider</option>
                    <option value="Manager">Manager</option>
                    <option value="Admin">Admin</option>
                }
                else if (Model.usertype == "ServiceProvider")
                {
                    <option disabled>--SELECT--</option>
                    <option value="Customer">Customer</option>
                    <option selected value="ServiceProvider">Service Provider</option>
                    <option value="Manager">Manager</option>
                    <option value="Admin">Admin</option>
                }
                else
                {
                    <option selected disabled>--SELECT--</option>
                    <option value="Customer">Customer</option>
                    <option value="ServiceProvider">Service Provider</option>
                    <option value="Manager">Manager</option>
                    <option value="Admin">Admin</option>
                }
            </select>
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.createdat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.createdat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.createdat, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <input name="createdat" value=@Model.createdat type="hidden" />

    <div class="form-group">
        @Html.LabelFor(model => model.email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.image, "Image", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.phone, "Phone", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ViewUsers")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
